[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mul;

uniform float u_amount : hint_range(0, 1.0) = 0.1; 


float get_noise(vec2 uv) {
    return fract(sin(dot(uv ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment() {
    float n = 2.0 * get_noise(UV + vec2(TIME, 0.0)) - 1.0;
    COLOR = texture(TEXTURE, UV) + n * u_amount;
	
	//float noiseValue = texture(NOISE_PATTERN, UV).x;
    //COLOR = vec4(noiseValue);
}"

[resource]
shader = SubResource( 1 )
shader_param/u_amount = 0.1
